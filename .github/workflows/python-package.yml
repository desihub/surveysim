# Workflow is based on the Astropy GitHub actions workflow, ci_workflows.yml
name: CI

on:
    push:
        branches:
            - '*'
        tags:
            - '*'
    pull_request:

jobs:
    tests:
        name: Unit tests
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: true
            matrix:
                os: [ubuntu-22.04]
                python-version: ['3.9', '3.10']
        env:
            DESIMODEL_DATA: branches/test-0.18

        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                fetch-depth: 0
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                python-version: ${{ matrix.python-version }}
            - name: Install Python dependencies
              run: |
                python -m pip install --upgrade pip setuptools wheel
                python -m pip install pytest
                python -m pip install -r requirements.txt
                python -m pip install specutils specsim
                python -m pip install git+https://github.com/desihub/desiutil.git@3.4.3#egg=desiutil
                python -m pip install git+https://github.com/desihub/desimodel.git@0.18.0#egg=desimodel
                svn export https://desi.lbl.gov/svn/code/desimodel/${DESIMODEL_DATA}/data
                python -m pip install git+https://github.com/desihub/desisurvey.git@0.20.0#egg=desisurvey
            - name: Run the test
              run: DESIMODEL=$(pwd) pytest

    coverage:
        name: Test coverage
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: true
            matrix:
                os: [ubuntu-22.04]
                python-version: ['3.10']
        env:
            DESIMODEL_DATA: branches/test-0.18

        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                fetch-depth: 0
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                python-version: ${{ matrix.python-version }}
            - name: Install Python dependencies
              run: |
                python -m pip install --upgrade pip setuptools wheel
                python -m pip install pytest pytest-cov coveralls
                python -m pip install -r requirements.txt
                python -m pip install git+https://github.com/desihub/desiutil.git@3.4.3#egg=desiutil
                python -m pip install git+https://github.com/desihub/desimodel.git@0.18.0#egg=desimodel
                svn export https://desi.lbl.gov/svn/code/desimodel/${DESIMODEL_DATA}/data
                python -m pip install git+https://github.com/desihub/specsim.git@v0.16#egg=specsim
                python -m pip install git+https://github.com/desihub/speclite.git@v0.16#egg=speclite
                python -m pip install git+https://github.com/desihub/desisurvey.git@0.20.0#egg=desisurvey
            - name: Run the test with coverage
              run: DESIMODEL=$(pwd) pytest --cov
            - name: Coveralls
              env:
                COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: coveralls

    docs:
        name: Doc test
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-22.04]
                python-version: ['3.10']

        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                fetch-depth: 0
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                python-version: ${{ matrix.python-version }}
            - name: Install Python dependencies
              run: python -m pip install --upgrade pip setuptools wheel Sphinx
            - name: Test the documentation
              run: sphinx-build -W --keep-going -b html doc doc/_build/html

    style:
        name: Style check
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-22.04]
                python-version: ['3.10']

        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                fetch-depth: 0
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                python-version: ${{ matrix.python-version }}
            - name: Install Python dependencies
              run: python -m pip install --upgrade pip setuptools wheel pycodestyle
            - name: Test the style; failures can be allowed if necessary
              # This is equivalent to an allowed falure.
              # continue-on-error: true
              run: pycodestyle --count py/surveysim
